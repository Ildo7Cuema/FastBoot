version: '3.8'

services:
  fastboot-app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: fastboot-factory-reset
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - JWT_SECRET=${JWT_SECRET:-change-this-secret-in-production}
      - SESSION_SECRET=${SESSION_SECRET:-change-this-session-secret}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_DIRECTORY=/app/logs
      - LOG_MAX_SIZE=${LOG_MAX_SIZE:-10MB}
      - LOG_MAX_FILES=${LOG_MAX_FILES:-30}
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost:3000}
      - RATE_LIMIT_WINDOW_MS=${RATE_LIMIT_WINDOW_MS:-900000}
      - RATE_LIMIT_MAX=${RATE_LIMIT_MAX:-100}
      - BCRYPT_ROUNDS=${BCRYPT_ROUNDS:-10}
      - MAX_LOGIN_ATTEMPTS=${MAX_LOGIN_ATTEMPTS:-5}
      - LOGIN_LOCKOUT_TIME=${LOGIN_LOCKOUT_TIME:-300000}
    volumes:
      # Persistir logs
      - ./logs:/app/logs
      # Persistir uploads
      - ./uploads:/app/uploads
      # Persistir backups
      - ./backups:/app/backups
      # Persistir dados (usuários, etc)
      - ./data:/app/data
      # Acesso ao USB (para dispositivos Android)
      - /dev/bus/usb:/dev/bus/usb
    devices:
      # Permitir acesso aos dispositivos USB
      - /dev/bus/usb:/dev/bus/usb
    privileged: true
    networks:
      - fastboot-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "com.fastboot.description=FastBoot Factory Reset Application"
      - "com.fastboot.version=1.0.0"
      - "com.fastboot.maintainer=FastBoot Team"

  # Nginx como proxy reverso (opcional)
  nginx:
    image: nginx:alpine
    container_name: fastboot-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - fastboot-app
    networks:
      - fastboot-network
    labels:
      - "com.fastboot.service=nginx"

  # Redis para cache e sessões (opcional)
  redis:
    image: redis:7-alpine
    container_name: fastboot-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-fastboot-redis-password}
    volumes:
      - redis-data:/data
    networks:
      - fastboot-network
    labels:
      - "com.fastboot.service=redis"

  # MongoDB para logs e dados (opcional, alternativa ao SQLite)
  # mongodb:
  #   image: mongo:6
  #   container_name: fastboot-mongodb
  #   restart: unless-stopped
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME:-admin}
  #     - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-change-this-password}
  #     - MONGO_INITDB_DATABASE=fastboot
  #   volumes:
  #     - mongo-data:/data/db
  #   networks:
  #     - fastboot-network
  #   labels:
  #     - "com.fastboot.service=mongodb"

networks:
  fastboot-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis-data:
    driver: local
  # mongo-data:
  #   driver: local